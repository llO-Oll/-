小美需要制作个骰子。
与一般的六面骰子不同，小美需要的骰子总共有n面，而且每一面的数字也不同于一般的，这n面的数字需要分别是a1,a2……an。
当然，骰子是一个
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();
        for (int i = 0; i < T; i++) {
            int n = scanner.nextInt();
            int[] array = new int[n];
            int sum = 0;
            for (int j = 0; j < n; j++) {
                array[j] = scanner.nextInt();
                sum += array[j];
            }
            // 加入下列三行代码
            if(sum * 2 % n != 0){
                System.out.println("NO");
                continue;
            }

            int sum_two = sum * 2 / n;
            Arrays.sort(array);
            int a;
            for (a = 0; a < n / 2; a++) {
                if (array[a] + array[n - a - 1] != sum_two) {
                    System.out.println("NO");
                    break;
                }
            }
            if (a == n / 2) {
                System.out.println("YES");
            }
        }
        scanner.close();
    }
}

这个游戏的目的是赚尽可能的钱，湖救划中有n种作物，其中第i种作物从种植到作物成熟采摘需ti天，种子买入价格为ai;作物卖出价格为bi:(一个种子只会产出一个作物,种子可以重复购买)。
而游戏内总时间为m天，作物的种子种植和采摘、卖出不耗时间，成熟之前作物没有价值。
假设小美只有一块土地（即每个时间只能有一个作物在生长），初始的前足够多，小美想知道她最多能赚多少钱。
输入描述：第一行两个整数n,m代表作物种类数和天数。
接下来三行每行n个整数，分别表示
t1,...,tn,
a1,...,an,
b1,


删除01串
题目描述:
小美给你一个长度为n的01串(仅包含字符0和1的串)，你可以删除这个串的一个前缀和一个后缀(可以为空)，即保留一个原串的连续子串,操作之后整个串的代价为下面两部分之和:
1.被删除的字符1的个数;
2.剩下的子串的字符0的个数;
你需要最小化操作的代价,并将其输出
输入描述
输入仅一行,一个长度为n的01字符串。
输出描述
确出仅一行个整数,表示最小的操作代价。









